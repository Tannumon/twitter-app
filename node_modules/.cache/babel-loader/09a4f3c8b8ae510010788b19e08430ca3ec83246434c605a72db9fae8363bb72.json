{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanush Siotia\\\\Documents\\\\College\\\\Spring '23\\\\Week3\\\\twitter-app\\\\src\\\\Component\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tweet from \"./Tweet.js\";\nimport \"../Styles/Body.css\";\nimport serena from '../Images/pfp.png';\nimport sandra from '../Images/pfp.png';\nimport logo from '../Images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const init = [{\n    handle: \"@serenawilliams\",\n    author: \"Serena Williams\",\n    content: \"Submit a pitch to Serena Ventures!\",\n    prof: serena\n  }, {\n    handle: \"@IamSandraOh\",\n    author: \"Sandra Oh\",\n    content: \"Everyone should watch Killing Eve\",\n    prof: sandra\n  }];\n  const [handle, setHandle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [allTweets, setAllTweets] = useState(init);\n  const [filteredTweets, setFilteredTweets] = useState([]);\n  const addTweet = () => {\n    if (handle !== \"\" && author !== \"\" && content !== \"\") {\n      setAllTweets([{\n        handle: handle,\n        author: author,\n        content: content,\n        prof: logo\n      }, ...allTweets]);\n      setHandle(\"\");\n      setAuthor(\"\");\n      setContent(\"\");\n    }\n    console.log(allTweets);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create a Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Handle\",\n        value: handle,\n        onChange: e => setHandle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTweet,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"feedTitle\",\n        children: \"Your Twitter Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), allTweets.map((tweet, i) => /*#__PURE__*/_jsxDEV(Tweet, {\n        handle: tweet.handle,\n        author: tweet.author,\n        content: tweet.content,\n        likes: tweet.likes,\n        prof: tweet.prof\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"3pwwkTon8i9copssoDcAukg7HzA=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","Tweet","serena","sandra","logo","jsxDEV","_jsxDEV","Body","_s","init","handle","author","content","prof","setHandle","setAuthor","setContent","allTweets","setAllTweets","filteredTweets","setFilteredTweets","addTweet","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","id","map","tweet","i","likes","_c","$RefreshReg$"],"sources":["C:/Users/Tanush Siotia/Documents/College/Spring '23/Week3/twitter-app/src/Component/Body.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Tweet from \"./Tweet.js\";\r\nimport \"../Styles/Body.css\"; \r\nimport serena from '../Images/pfp.png';\r\nimport sandra from '../Images/pfp.png';\r\nimport logo from '../Images/logo.png'; \r\n\r\n\r\n\r\nconst Body = () => {\r\n\r\n  const init = [{handle:\"@serenawilliams\", author:\"Serena Williams\", content:\"Submit a pitch to Serena Ventures!\", prof:serena}, \r\n   {handle:\"@IamSandraOh\", author:\"Sandra Oh\", content:\"Everyone should watch Killing Eve\", prof:sandra}]; \r\n\r\n  const [handle, setHandle] = useState(\"\"); \r\n  const [author, setAuthor] = useState(\"\"); \r\n  const [content, setContent] = useState(\"\"); \r\n\r\n  const [allTweets, setAllTweets] = useState(init); \r\n  const [filteredTweets, setFilteredTweets] = useState([]); \r\n\r\n\r\n  const addTweet = () => {\r\n    if (handle !== \"\" && author !== \"\" && content !== \"\") {\r\n      setAllTweets([{handle: handle, author: author, content:content, prof:logo}, ...allTweets]); \r\n      setHandle(\"\"); \r\n      setAuthor(\"\"); \r\n      setContent(\"\"); \r\n    }\r\n    console.log(allTweets)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <div>\r\n    <h4>Create a Tweet</h4>\r\n    <input placeholder=\"Handle\" value={handle} onChange={e => setHandle(e.target.value)}></input>\r\n    <input placeholder=\"Author\" value={author} onChange={e => setAuthor(e.target.value)}></input>\r\n    <input placeholder=\"Content\" value={content} onChange={e => setContent(e.target.value)}></input>\r\n    <button onClick={addTweet}>Create</button>\r\n      </div>\r\n\r\n      <div id=\"feed\">\r\n      <h2 id=\"feedTitle\">Your Twitter Feed</h2>\r\n\r\n      {allTweets.map((tweet, i) => (\r\n        <Tweet handle={tweet.handle} author={tweet.author} content={tweet.content} likes={tweet.likes} prof={tweet.prof} key={i} />\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}